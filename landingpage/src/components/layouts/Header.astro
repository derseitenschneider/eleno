---
import Button from '../ui/Button.astro';
import LogoHeader from '../../assets/logos/logo-header.astro';
import Logo from '../../assets/logos/logo.astro';
---

<header class="header">
  <nav class="desktop">
    <ul class="nav-left">
      <li class="nav-link nav-link--logo">
        <a href="/">
          <LogoHeader />
        </a>
      </li>
      <li class="nav-link">
        <a href="https://demo.eleno.net" target="_blank">Demo</a>
      </li>
      <li class="nav-link">
        <a href="https://app.eleno.net/manual" target="_blank">Docs</a>
      </li>
      <li class="nav-link">
        <a href="#">Blog</a>
      </li>
    </ul>
    <div class="nav-right">
      <Button
        type="primary"
        link="https://app.eleno.net/?page=signup"
        target="_blank"
      >
        Sign Up
      </Button>
      <Button type="secondary" link="https://app.eleno.net/" target="_blank">
        Log In
      </Button>
    </div>
  </nav>
  <nav class="mobile">
    <a href="/">
      <Logo />
    </a>

    <button class="nav-toggle">x</button>
    <ul class="navlist">
      <li class="nav-link--mobile"><a href="#">Demo</a></li>
      <li class="nav-link--mobile"><a href="#">Docs</a></li>
      <li class="nav-link--mobile"><a href="#">Blog</a></li>
      <li class="nav-link--mobile">
        <Button type="primary" link="https://app.eleno.net/signup">
          Sign Up
        </Button>
      </li>
      <li class="nav-link--mobile">
        <a href="#">
          <Button type="secondary" link="https://app.eleno.net/login">
            Log In
          </Button></a
        >
      </li>
    </ul>
  </nav>
</header>

<style lang="scss">
  .header {
    position: sticky;
    top: 0;
    background-color: var(--clr-bg-400);
    transition: all 0.45s ease;
    .mobile {
      display: none;
    }
    &.scrolled {
      box-shadow: 4px 0 8px rgba(0, 0, 0, 0.2);
      .desktop {
        padding: 1.4rem 4rem;
        .nav-left {
          font-size: 1.6rem;
          gap: 2.4rem;

          .nav-link {
            &--logo {
              width: 10rem;
            }
          }
        }
      }
    }
    .desktop {
      padding: 1.8rem 4rem;
      display: flex;
      align-items: center;
      justify-content: space-between;

      .nav-left {
        display: flex;
        align-items: center;
        font-size: 2rem;
        gap: 3.2rem;
        transition: all 0.45s ease;

        .nav-link {
          &:hover {
            color: var(--clr-primary-600);
          }
          &--logo {
            width: 12rem;
            margin-right: 1.6rem;
            transition: all 0.45s ease;
          }
        }
      }

      .nav-right {
        display: flex;
        gap: 3.2rem;
      }
    }
  }

  @media (max-width: 1084px) {
    .header {
      position: relative;
      .desktop {
        display: none;
      }
      .mobile {
        display: none;

        .nav-toggle {
          position: fixed;
          top: 0;
          right: 0;
        }
        .navlist {
          position: fixed;
          top: 0;
          rigth: 0;
          height: 100vh;
          width: 100vw;
          background-color: var(--clr-primary-600);
        }
      }
    }
  }
</style>

<script>
  const header: HTMLElement | null = document.querySelector('.header');
  const sectionFeatures = document.querySelector('.section--features');
  const buttonsHeader: NodeListOf<HTMLElement> | undefined =
    header?.querySelectorAll('.button');

  // Make header smaller on scroll
  document.addEventListener('scroll', () => {
    if (window.innerWidth < 1084) return;
    if (header === null || !buttonsHeader) return;
    if (header.offsetTop >= 100) {
      header.classList.add('scrolled');
      buttonsHeader.forEach((btn) => {
        btn.style.fontSize = '14px';
        btn.style.fontWeight = '400';
        btn.style.transition = 'all 0.45s ease';
        // btn.style.border = '1px solid var(--clr-primary-600)';
      });
    } else {
      header.classList.remove('scrolled');
      buttonsHeader.forEach((btn) => {
        btn.style.fontSize = 'initial';
        btn.style.fontWeight = '600';
        // btn.style.border = '2px solid var(--clr-primary-600)';
      });
    }
  });

  // Intersection observer
  window.addEventListener('load', function () {
    if (!header) return;
    const margin = `${-window.innerHeight + header?.clientHeight}px`;
    console.log(margin);
    let options = {
      root: null,
      rootMargin: `826px 10px 826px 10px`,
      threshold: 0,
    };
    let target = sectionFeatures;

    // let callback = (entries) => {
    //   entries.forEach((entry) => {
    //     console.log(entry);
    //   });
    // };
    // let observer = new IntersectionObserver(callback, options);
    // if (target) {
    //   observer.observe(target);
    // }
  });
</script>
