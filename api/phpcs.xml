<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Morntag Custom PHPCS Rules">
    <description>Morntag rules for PHP_CodeSniffer</description>

    <exclude-pattern>/vendor/*</exclude-pattern>

    <rule ref="WordPress-Core"> </rule>

    <rule ref="WordPress">
        <exclude name="WordPress.Files.FileName"/>
        <exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
    </rule>

    <rule ref="Squiz.Commenting.FileComment.Missing">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.FunctionComment.WrongStyle">
        <severity>0</severity>
    </rule>

    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.ClassComment.Missing">
        <severity>0</severity>
    </rule>
    <!-- <rule ref="Squiz.Commenting.FunctionComment.Missing"> -->
    <!--     <severity>0</severity> -->
    <!-- </rule> -->

    <!-- <rule ref="Squiz.Commenting.VariableComment.Missing"> -->
    <!--     <severity>0</severity> -->
    <!-- </rule> -->

    <rule ref="Squiz.Commenting.FileComment.WrongStyle">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.PHP.CommentedOutCode.Found">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DontExtract.extract_extract">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_fopen">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.Security.EscapeOutput.ExceptionNotEscaped">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.DateTime.RestrictedFunctions.date_date">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.json_encode_json_encode">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_fwrite">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_fclose">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.Security.ValidatedSanitizedInput.InputNotValidated">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.EnqueuedResources.NonEnqueuedStylesheet">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.Security.ValidatedSanitizedInput.InputNotSanitized">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.Security.EscapeOutput.OutputNotEscaped">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.NoSilencedErrors.Discouraged">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.InlineComment.InvalidEndChar">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_init">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_setopt">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_exec">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_errno">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_error">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_close">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.curl_curl_getinfo">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DiscouragedPHPFunctions.system_calls_exec">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.Security.ValidatedSanitizedInput.MissingUnslash">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DevelopmentFunctions.error_log_print_r">
        <severity>0</severity>
    </rule>

    <rule ref="Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DevelopmentFunctions.error_log_var_dump">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DevelopmentFunctions.error_log_debug_backtrace">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.PHP.DevelopmentFunctions.error_log_var_export">
        <severity>0</severity>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_mkdir">
        <severity>0</severity>
    </rule>
    <arg name="tab-width" value="4"/>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
        </properties>
    </rule>
</ruleset>
